// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataLayer.Migrations
{
    [DbContext(typeof(StorageContext))]
    partial class StorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DomainLayer.Models.Group", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DomainLayer.Models.Student", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Patronomic")
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("character varying(40)")
                        .HasMaxLength(40);

                    b.Property<Guid?>("UniqueIDID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("UniqueIDID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DomainLayer.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("GroupGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentGuid")
                        .HasColumnType("uuid");

                    b.HasKey("GroupGuid", "StudentGuid");

                    b.HasIndex("StudentGuid");

                    b.ToTable("StudentGroup");
                });

            modelBuilder.Entity("DomainLayer.Models.UniqueID", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("UID")
                        .HasColumnType("character varying(16)")
                        .HasMaxLength(16);

                    b.HasKey("ID");

                    b.HasIndex("UID")
                        .IsUnique();

                    b.ToTable("UniqueIds");
                });

            modelBuilder.Entity("DomainLayer.Models.Student", b =>
                {
                    b.HasOne("DomainLayer.Models.UniqueID", "UniqueID")
                        .WithMany()
                        .HasForeignKey("UniqueIDID");
                });

            modelBuilder.Entity("DomainLayer.Models.StudentGroup", b =>
                {
                    b.HasOne("DomainLayer.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Student", "Student")
                        .WithMany("Groups")
                        .HasForeignKey("StudentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
